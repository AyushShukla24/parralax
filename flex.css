.parent{
    border: 2px solid black;
    width: 700px;
    height: 500px;
    display: flex;
    flex-direction: row; /* more options -> column,row-reverse,column-reverse */
    flex-wrap: wrap; /* width will intact and responsize, more options like...-> nowrap,wrap-reverse */

    /* both combined in one */
    /* flex-flow: row wrap; */

    /*justify content will act in x-axis*/
    justify-content: flex-end;
    justify-content: flex-start;
    justify-content: center;
    justify-content: space-around;
    justify-content: space-evenly;
    justify-content: space-between; /* only this will execute (last wali)*/


    /*align item will act in y-axis*/
    align-items: flex-start;
    align-items: flex-end;
    align-items: center;
    align-items: stretch;

    /* align-content: is used to manage space between flex rows */
    /* align-items: flex-start; */


    gap: 10px; /* use gap for inbetween space in flex....never use margin(it will given margin at left and right of both left and right box) */
}

.c{
    border: 1px solid black;
    width: 30px;
    background-color: aquamarine;
}


.parent1{
    border: 2px solid black;
    width: 700px;
    height: 250px;
    margin: 4px;
    display: flex;
    gap: 25px;
}
.ch{
    border: 1px solid black;
    width: 30px;
    background-color: rgb(121, 232, 195);
}

#c1{
    order: 1; /* default order is zero */
    flex-grow: 1; /* default flex grow is zero */
    flex-shrink: 4; /* shrinking speed of box when we do small screen through insspect !  default value is one */
    flex-basis: auto; /*it works as same as width.... but in responsize manner*/
    align-self: flex-end;
}


.container{
    background-color: blueviolet;
    border: 3px solid black;
    display: grid;
    grid-template-columns: 300px 300px 300px; /*3coloum with 300px*/
    grid-template-rows: 200px 200px 200px; /*2row with 200px*/
    /*use fr instead of px for responsive sites*/
    gap: 50px; /*see through box model*/
}

.div{
    background-color: black;
    border: 3px solid green;
    /* height: 100px; */
    /* width: 100px; */
}

#div1{
   grid-column-start: 1;
   grid-column-end: 3;
   /* grid-row-start: 1;
   grid-row-start: 3; */
}

.ggid{
    border: 2px solid black;
    background-color: aquamarine;
    width: 100%;
    height: 700px;
    display: grid;
    grid-template-columns: repeat(3,1fr);
    grid-template-rows: repeat(2,1fr);
    grid-gap: 20px;
}

.box{
    background-color: rgb(208, 150, 64);
    border: 1px solid red;
}

#bo1{
    /* grid-column-start: 1;
    grid-column-end: 3;

    grid-row-start: 1;
    grid-row-end: 3; */

    /* in-short */
    grid-area: 1/1/3/3; /*Grid-row-start/G-C-S/G-R-E/G-C-E;*/
}

.contain{
    height: 1000px;
    display: grid;
    background-color: rgb(8, 0, 255);
    border: 2px solid black;

    grid-auto-rows: minmax(100px,auto);/*min 100px and max auto*/
    grid-template-columns: repeat(3,1fr);
    grid-gap: 20px;
}

.wrap{
    background-color: black;
    border: 2px solid rgb(148, 14, 152);

    height: 500px;
    width: 600px;
    display: grid;
    gap: 20px;
    grid-template-columns: 60px 60px;
    grid-template-rows: 60px 60px;
    
    /*x-axis*/
    /* justify-content: start;
    justify-content: end;
    justify-content: space-between;
    justify-content: space-around;
    justify-content: space-evenly; */

    /* y-axis*/
    /* align-items: start;
    align-items: end;
    align-items: baseline;
    align-items: stretch; */
}

.bop{
    background-color:palevioletred;
    height: 50px;
    width: 50px;
}

#lol1{
    justify-self: start;
    justify-self: center;
    justify-self: end;

    align-self: center;
}
